let token="";export default{async fetch(e,t){const n=e.headers.get("user-agent"),s=new URL(e.url);if("/"!==s.pathname){const e=s.pathname.split("/").pop();if(e.match(/\.js$/i)&&!/(quantumult%20|surge|loon|stash)/i.test(n))return Response.redirect("https://t.me/yqc_123",302);if(!e.match(/\./i))return new Response("别乱访问了",{status:404});let a="https://raw.githubusercontent.com";new RegExp(a,"i").test(s.pathname)?a+=s.pathname.split(a)[1]:(t.GH_NAME&&(a+="/"+t.GH_NAME,t.GH_REPO&&(a+="/"+t.GH_REPO,t.GH_BRANCH&&(a+="/"+t.GH_BRANCH))),a+=s.pathname),token=t.GH_TOKEN&&t.TOKEN?t.TOKEN==s.searchParams.get("token")?t.GH_TOKEN||token:s.searchParams.get("token")||token:s.searchParams.get("token")||t.GH_TOKEN||t.TOKEN||token;const r=token;if(!r||""==r)return new Response("TOKEN不能为空",{status:400});const o=new Headers;o.append("Authorization",`token ${r}`);const h=await fetch(a,{headers:o});if(h.ok)return new Response(h.body,{status:h.status,headers:h.headers});{const e=t.ERROR||"无法获取文件，检查路径或TOKEN是否正确。";return new Response(e,{status:h.status})}}{const n=t.URL302?"URL302":t.URL?"URL":null;if(n){const s=await ADD(t[n]),a=s[Math.floor(Math.random()*s.length)];return"URL302"===n?Response.redirect(a,302):fetch(new Request(a,e))}const s=await fetch("https://yqc-premium.pages.dev/intro.html").then((e=>e.text()));return new Response(s,{headers:{"Content-Type":"text/html; charset=UTF-8"}})}}};async function ADD(e){var t=e.replace(/[	|"'\r\n]+/g,",").replace(/,+/g,",");","==t.charAt(0)&&(t=t.slice(1)),","==t.charAt(t.length-1)&&(t=t.slice(0,t.length-1));return t.split(",")}
